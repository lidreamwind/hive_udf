-- 作业1，找出全部夺得三连冠的队伍

-- 思路，按照队伍名分区统计数量，数量大于等于3的即可。
select team,count(*) num
from t1
group by team
having count(*)>=3;

-- 作业2

-- 解法一，使用第一和第二函数
-- 思路  ： 1、按照每个id分组，使用first_value和last_value函数求出起最大值和最小值
--         2、将价格=最大值和最小值的数据过滤出来，最大值是波峰、最小值是波谷
with tmp as (
    select id,
           `time`,
           price,
           first_value(price)
                       over (partition by id order by price desc rows between unbounded preceding and unbounded following) as max,
           last_value(price)
                      over (partition by id order by price desc rows between unbounded preceding and unbounded following)  as min
    from t2
)
select id,`time`,price,
       case  when price=max then '波峰'
             when price=min then '波谷' end as feature
from tmp
where price=max or price=min;

-- 解法二
-- 思路  ： 1、按照每个id分组，求出起最大值和最小值
--         2、将价格=最大值和最小值的数据过滤出来，最大值是波峰、最小值是波谷
with tmp as (
    select id, max(price) max, min(price) min
    from t2
    group by id
)
select t2.id,t2.time,t2.price,'波峰' as teature from tmp join t2 on tmp.id=t2.id and tmp.max=t2.price
union all
select t2.id,t2.time,t2.price,'波谷' as teature from tmp join t2 on tmp.id=t2.id and tmp.min=t2.price;

--作业3

-- 3.1 每个id浏览时长、步长
--下面是每个用户的所有浏览时长
--思路：   1、将表内时间字符串转换为时间戳类型
--        2、按照id分组，时间戳升序排列，并使用lag函数向下移动一位，求得两次记录的时间差值，并按照id统计数量
--        3、按照id和统计数量分组，得到总的浏览时长、步长
with tt3 as (
    -- 格式化需要和日期保持一致
    -- 1、将表内时间字符串转换为时间戳类型
    select id,UNIX_TIMESTAMP(dt,'yyyy/MM/dd HH:mm') dt from t3
)
--  3、按照id和统计数量分组，得到总的浏览时长、步长
select id,sum(duration/60) as duration_mi,cnt
from (
        -- 2、按照id分组，时间戳升序排列，并使用lag函数向下移动一位，求得两次记录的时间差值，并按照id统计数量
         select id,
                dt,
                lag(dt) over (partition by id order by dt),  --获取记录的上一条记录
                count(*) over (partition by id) as  cnt,     -- 按照id分组统计步长
                case
                    when lag(dt) over (partition by id order by dt) is null then 0
                    else dt - lag(dt) over (partition by id order by dt) end duration  -- 求得两次时间差值
         from tt3
         order by id, dt
) ttt3
group by id,cnt;

--3.2
--思路：   1、将表内时间字符串转换为时间戳类型
--        2、按照id分组，时间戳升序排列，并使用lag函数向下移动一位，求得两次记录的时间差值
--        3、将两次浏览时长>30分钟的起始位置标记为1，并按照id分组统计求和，将用户的浏览次数分组
--        4、按浏览次数分组之后，进行id每次浏览的时长和步长统计
with tt3 as (
    -- 1、将表内时间字符串转换为时间戳类型
    select id,UNIX_TIMESTAMP(dt,'yyyy/MM/dd HH:mm') dt from t3
)
-- 4、按浏览次数分组之后，进行id每次浏览的时长和步长统计
select id,sum(duration_mi),count(*) as cnt
from (
    -- 3、将两次浏览时长>30分钟的起始位置标记为1，并按照id分组统计求和，将用户的浏览次数分组
         select id,
                duration / 60   as duration_mi,
                sum(case when duration / 60 > 30 then 1 else 0 end)
                    over (partition by id rows between unbounded preceding and current row ) as gid
         from (
             -- 2、按照id分组，时间戳升序排列，并使用lag函数向下移动一位，求得两次记录的时间差值
                  select id,
                         dt,
                         lag(dt) over (partition by id order by dt),
                         case
                             when lag(dt) over (partition by id order by dt) is null then 0
                             else dt - lag(dt) over (partition by id order by dt) end duration
                  from tt3
                  order by id, dt
        ) ttt3
) tttt4
group by id,gid